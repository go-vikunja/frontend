user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    gzip  on;
    gzip_disable "msie6";

    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_min_length 256;
    gzip_types text/plain text/css application/json application/x-javascript application/javascript text/xml application/xml application/xml+rss text/javascript application/vnd.ms-fontobject application/x-font-ttf font/opentype image/svg+xml font/woff2 image/x-icon audio/wav;

    map_hash_max_size 128;
    map_hash_bucket_size 128;

    # Expires map
    map $sent_http_content_type $expires {
        default                       off;
        text/html                     max;
        text/css                      max;
        application/javascript        max;
        text/javascript               max;
        application/vnd.ms-fontobject max;
        application/x-font-ttf        max;
        font/opentype                 max;
        font/woff2                    max;
        image/svg+xml                 max;
        image/x-icon                  max;
        audio/wav                     max;
        ~image/                       max;
        ~font/                        max;
    }

    server {
        listen 80;
        listen 81  default_server http2 proxy_protocol; ## Needed when behind HAProxy with SSL termination + HTTP/2 support

        server_name  _;

        expires $expires;

        location ~* .(txt|webmanifest|css|js|mjs|map|svg|jpg|jpeg|png|ico|ttf|woff|woff2|wav)$ {
            root   /usr/share/nginx/html;
            try_files $uri $uri/ =404;
        }

        location / {
            root   /usr/share/nginx/html;
            try_files $uri $uri/ /;
            index  index.html index.htm;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }
}
